import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "@/app/globals.css";
import ServerIntlProvider from "@/app/providers/server-intl-provider";
import getIntl from "@/lib/intl";
import { languageService } from "@/services/language";
import { Dirs } from "@/types/global";
import Header from "@/components/header";
import { ThemeProvider } from "@/app/providers/theme-provider";
import QueryProvider from "@/app/providers/query-provider";
import { Toaster } from "@/components/ui/sonner";

const inter = Inter({
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<RootLayoutProps>) {
  const intl = await getIntl(locale);

  const activeLanguages = await languageService
    .getActiveLanguages()
    .then(({ data }) => data.data);
  const currentLanguage =
    activeLanguages.find((lang) => lang.locale === locale) ??
    activeLanguages[0];

  return (
    <html
      lang={currentLanguage.locale}
      dir={currentLanguage.backward ? Dirs.RTL : Dirs.LTR}
    >
      <body className={`${inter.className} antialiased bg-muted`}>
        <ServerIntlProvider
          locale={locale}
          messages={intl.messages as Record<string, string>}
        >
          <ThemeProvider>
            <QueryProvider>
              <div className="min-h-screen flex flex-col gap-y-5">
                <Header />
                {children}
              </div>
            </QueryProvider>
            <Toaster richColors />
          </ThemeProvider>
        </ServerIntlProvider>
      </body>
    </html>
  );
}
